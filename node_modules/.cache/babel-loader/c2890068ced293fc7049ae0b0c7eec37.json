{"remainingRequest":"/Users/drewpeifer/src/vue/api-demo/node_modules/babel-loader/lib/index.js!/Users/drewpeifer/src/vue/api-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/drewpeifer/src/vue/api-demo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/drewpeifer/src/vue/api-demo/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/drewpeifer/src/vue/api-demo/src/views/Home.vue","mtime":1645719644921},{"path":"/Users/drewpeifer/src/vue/api-demo/babel.config.js","mtime":1645525835308},{"path":"/Users/drewpeifer/src/vue/api-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewpeifer/src/vue/api-demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/drewpeifer/src/vue/api-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewpeifer/src/vue/api-demo/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2RyZXdwZWlmZXIvc3JjL3Z1ZS9hcGktZGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgcmVhY3RpdmUsIHRvUmVmcywgY29tcHV0ZWQgfSBmcm9tICJ2dWUiOwppbXBvcnQgQ2FyZCBmcm9tICdAL2NvbXBvbmVudHMvQ2FyZC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIENhcmQ6IENhcmQKICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciBzdGF0ZSA9IHJlYWN0aXZlKHsKICAgICAgcG9zdHM6IFtdLAogICAgICBzZWFyY2hEYXRlOiAiIiwKICAgICAgcmVmcmVzaERhdGU6IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gcmVmcmVzaERhdGUoKTsKICAgICAgfSkKICAgIH0pOyAvLyBnZXRzIHRoZSBkYXRlIGZyb20gdGhlIGlucHV0LCBvciBpZiB0aGUgaW5wdXQgaXMgZW1wdHksIHJldHVybnMgY3VycmVudCBkYXRlCgogICAgZnVuY3Rpb24gcmVmcmVzaERhdGUoKSB7CiAgICAgIGlmICghc3RhdGUuc2VhcmNoRGF0ZSkgewogICAgICAgIC8vIGlucHV0IGVtcHR5LCByZXR1cm4gdG9kYXkncyBkYXRlCiAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsKICAgICAgICByZXR1cm4gc2FuaXRpemVEYXRlKHRvZGF5KTsKICAgICAgfQoKICAgICAgdmFyIHNlYXJjaERhdGUgPSBzdGF0ZS5zZWFyY2hEYXRlOwogICAgICByZXR1cm4gc2FuaXRpemVEYXRlKHNlYXJjaERhdGUpOwogICAgfSAvLyBzYW5pdGl6ZXMgYSBkYXRlIHN0cmluZwoKCiAgICBmdW5jdGlvbiBzYW5pdGl6ZURhdGUoZGF0ZSkgewogICAgICB2YXIgZGQgPSBTdHJpbmcoZGF0ZS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyksCiAgICAgICAgICBtbSA9IFN0cmluZyhkYXRlLmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAnMCcpLAogICAgICAgICAgeXl5eSA9IGRhdGUuZ2V0RnVsbFllYXIoKSwKICAgICAgICAgIHVnbHlEYXRlID0geXl5eSArICItIiArIG1tICsgIi0iICsgZGQsCiAgICAgICAgICBuaWNlRGF0ZSA9IG1tICsgJy8nICsgZGQgKyAnLycgKyB5eXl5OwogICAgICBzdGF0ZS5zZWFyY2hEYXRlID0gdWdseURhdGU7CiAgICAgIHJldHVybiBuaWNlRGF0ZTsKICAgIH0gLy8gcGVyZm9ybXMgdGhlIHNlYXJjaCBhZ2FpbnN0IHRoZSBBUE9EIGFwaQoKCiAgICBmdW5jdGlvbiBzZWFyY2goKSB7CiAgICAgIGZldGNoKCJodHRwczovL2FwaS5uYXNhLmdvdi9wbGFuZXRhcnkvYXBvZD9hcGlfa2V5PXVwMHdWcW1ZcTNkbFA4U0FHZFJWV2xqamlFTEttNDRQMzhEUkd1TkMmZGF0ZT0iICsgc3RhdGUuc2VhcmNoRGF0ZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICBzdGF0ZS5wb3N0cyA9IFtkYXRhXTsKICAgICAgICBjb25zb2xlLmRpcihzdGF0ZSk7CiAgICAgIH0pOwogICAgfSAvLyByZXR1cm5zIGEgcmFuZG9tIDYgQVBPRCBlbnRyaWVzCgoKICAgIGZ1bmN0aW9uIHJhbmRvbVNlYXJjaCgpIHsKICAgICAgZmV0Y2goImh0dHBzOi8vYXBpLm5hc2EuZ292L3BsYW5ldGFyeS9hcG9kP2FwaV9rZXk9dXAwd1ZxbVlxM2RsUDhTQUdkUlZXbGpqaUVMS200NFAzOERSR3VOQyZjb3VudD02IikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICBzdGF0ZS5wb3N0cyA9IGRhdGE7CiAgICAgICAgY29uc29sZS5kaXIoc3RhdGUpOwogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0b1JlZnMoc3RhdGUpKSwge30sIHsKICAgICAgcmVmcmVzaERhdGU6IHJlZnJlc2hEYXRlLAogICAgICBzZWFyY2g6IHNlYXJjaCwKICAgICAgcmFuZG9tU2VhcmNoOiByYW5kb21TZWFyY2gKICAgIH0pOwogIH0KfTs="},{"version":3,"mappings":";;;AAiBA,SAAQA,QAAR,EAAkBC,MAAlB,EAA0BC,QAA1B,QAAyC,KAAzC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,eAAe;AACdC,MAAI,EAAE,MADQ;AAEdC,YAAU,EAAE;AACXF,QAAG,EAAHA;AADW,GAFE;AAKdG,OALc,mBAKN;AACP,QAAMC,KAAI,GAAIP,QAAQ,CAAC;AACtBQ,WAAK,EAAE,EADe;AAEtBC,gBAAU,EAAE,EAFU;AAGtBC,iBAAW,EAAER,QAAQ,CAAC;AAAA,eAAMQ,WAAW,EAAjB;AAAA,OAAD;AAHC,KAAD,CAAtB,CADO,CAOP;;AACA,aAASA,WAAT,GAAuB;AAEtB,UAAI,CAACH,KAAK,CAACE,UAAX,EAAuB;AACtB;AACA,YAAIE,KAAI,GAAI,IAAIC,IAAJ,EAAZ;AACA,eAAOC,YAAY,CAACF,KAAD,CAAnB;AACD;;AAEA,UAAIF,UAAS,GAAIF,KAAK,CAACE,UAAvB;AACA,aAAOI,YAAY,CAACJ,UAAD,CAAnB;AACD,KAlBO,CAoBP;;;AACA,aAASI,YAAT,CAAsBC,IAAtB,EAA4B;AAC3B,UAAIC,EAAC,GAAIC,MAAM,CAACF,IAAI,CAACG,OAAL,EAAD,CAAN,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAT;AAAA,UACCC,EAAC,GAAIH,MAAM,CAACF,IAAI,CAACM,QAAL,KAAkB,CAAnB,CAAN,CAA4BF,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CADN;AAAA,UAECG,IAAG,GAAIP,IAAI,CAACQ,WAAL,EAFR;AAAA,UAGCC,QAAO,GAAIF,IAAG,GAAI,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBJ,EAHpC;AAAA,UAICS,QAAO,GAAIL,EAAC,GAAI,GAAL,GAAWJ,EAAX,GAAgB,GAAhB,GAAsBM,IAJlC;AAMAd,WAAK,CAACE,UAAN,GAAmBc,QAAnB;AACA,aAAOC,QAAP;AACD,KA9BO,CAgCP;;;AACA,aAASC,MAAT,GAAkB;AACjBC,WAAK,CAAC,+FAA+FnB,KAAK,CAACE,UAAtG,CAAL,CACCkB,IADD,CACM,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OADN,EAECF,IAFD,CAEM,UAACG,IAAD,EAAU;AACfC,eAAO,CAACC,GAAR,CAAYF,IAAZ;AACAvB,aAAK,CAACC,KAAN,GAAc,CAACsB,IAAD,CAAd;AACAC,eAAO,CAACE,GAAR,CAAY1B,KAAZ;AACA,OAND;AAOD,KAzCO,CA2CP;;;AACA,aAAS2B,YAAT,GAAwB;AACvBR,WAAK,CAAC,8FAAD,CAAL,CACCC,IADD,CACM,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OADN,EAECF,IAFD,CAEM,UAACG,IAAD,EAAU;AACfC,eAAO,CAACC,GAAR,CAAYF,IAAZ;AACCvB,aAAK,CAACC,KAAN,GAAcsB,IAAd;AACDC,eAAO,CAACE,GAAR,CAAY1B,KAAZ;AACA,OAND;AAOD;;AAEA,2CACIN,MAAM,CAACM,KAAD,CADV;AAECG,iBAAW,EAAXA,WAFD;AAGCe,YAAM,EAANA,MAHD;AAICS,kBAAW,EAAXA;AAJD;AAMD;AAjEc,CAAf","names":["reactive","toRefs","computed","Card","name","components","setup","state","posts","searchDate","refreshDate","today","Date","sanitizeDate","date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","uglyDate","niceDate","search","fetch","then","res","json","data","console","log","dir","randomSearch"],"sourceRoot":"","sources":["/Users/drewpeifer/src/vue/api-demo/src/views/Home.vue"],"sourcesContent":["<template>\n<div class=\"flex mt-5 flex-row justify-center w-min mx-auto\">\n\t<input type=\"date\" placeholder=\"MM/DD/YYYY\" class=\"text-right p-2 mr-2 border-blue-500 border-2 rounded-full\" v-model=\"searchDate\" />\n\t<button @click=\"search\" class=\"searchBtn bg-blue-900 hover:bg-blue-600 text-white font-bold px-4 rounded-full\">Search</button>\n</div>\n<div class=\"flex grow mt-5 flex-row justify-center mx-auto \">\n\t<button @click=\"randomSearch\" class=\"searchBtn bg-green-900 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full w-min whitespace-nowrap\">Surprise me!</button>\n</div>\n<div class=\"px-5 grow flex flex-wrap justify-center flex-row\">\n\t<Card v-for=\"post in posts\" :post=\"post\" :key=\"post.date\" />\n</div>\n<div class=\"footer self-end text-center pt-5 text-xs\">\n\t<p>Powered by VueJS and NASA</p>\n</div>\n</template>\n\n<script>\nimport {reactive, toRefs, computed} from \"vue\";\nimport Card from '@/components/Card.vue';\n\nexport default {\n\tname: 'Home',\n\tcomponents: {\n\t\tCard\n\t},\n\tsetup() {\n\t\tconst state = reactive({\n\t\t\tposts: [],\n\t\t\tsearchDate: \"\",\n\t\t\trefreshDate: computed(() => refreshDate())\n\t\t});\n\n\t\t// gets the date from the input, or if the input is empty, returns current date\n\t\tfunction refreshDate() {\n\n\t\t\tif (!state.searchDate) {\n\t\t\t\t// input empty, return today's date\n\t\t\t\tlet today = new Date();\n\t\t\t\treturn sanitizeDate(today);\n\t\t\t}\n\n\t\t\tlet searchDate = state.searchDate;\n\t\t\treturn sanitizeDate(searchDate);\n\t\t}\n\n\t\t// sanitizes a date string\n\t\tfunction sanitizeDate(date) {\n\t\t\tvar dd = String(date.getDate()).padStart(2, '0'),\n\t\t\t\tmm = String(date.getMonth() + 1).padStart(2, '0'),\n\t\t\t\tyyyy = date.getFullYear(),\n\t\t\t\tuglyDate = yyyy + \"-\" + mm + \"-\" + dd,\n\t\t\t\tniceDate = mm + '/' + dd + '/' + yyyy;\n\n\t\t\tstate.searchDate = uglyDate;\n\t\t\treturn niceDate;\n\t\t}\n\n\t\t// performs the search against the APOD api\n\t\tfunction search() {\n\t\t\tfetch(\"https://api.nasa.gov/planetary/apod?api_key=up0wVqmYq3dlP8SAGdRVWljjiELKm44P38DRGuNC&date=\" + state.searchDate)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tstate.posts = [data];\n\t\t\t\tconsole.dir(state);\n\t\t\t})\n\t\t}\n\n\t\t// returns a random 6 APOD entries\n\t\tfunction randomSearch() {\n\t\t\tfetch(\"https://api.nasa.gov/planetary/apod?api_key=up0wVqmYq3dlP8SAGdRVWljjiELKm44P38DRGuNC&count=6\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\t\tstate.posts = data;\n\t\t\t\tconsole.dir(state);\n\t\t\t})\n\t\t}\n\n\t\treturn {\n\t\t\t...toRefs(state),\n\t\t\trefreshDate,\n\t\t\tsearch,\n\t\t\trandomSearch\n\t\t}\n\t}\n}\n</script>\n"]}]}